@model DataAnnotations.ViewModels.ViewModelBase

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width;user-scalable=no" />
    <title>@Model.Title</title>
    <link rel="stylesheet" href="~/Content/Styles/site.css" />
    <script src="@Url.Content("~/Content/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/jquery.validate.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $.validator.addMethod('iseven', function (value, element, params) {
            // params set to "rules" in the adapter populated by rules in the server code
            var mustBeMultipleOf4 = params.multipleof4;
            if (mustBeMultipleOf4)
                return (value % 4 === 0);

            return (value % 2 === 0);
        });
        $.validator.unobtrusive.adapters.add('iseven', ['multipleof4', 'more_parameters'],
            function (options) {
                options.rules['iseven'] = options.params;
                options.messages['iseven'] = options.message;
            });
    </script> 
    <script type="text/javascript">
        jQuery.validator.addMethod("greater", function (value, element, params) {
            // Parameter "other" indicates the name of an input element: retrieve and get the value.
            var otherDate = $("#" + params.other).val();
            return Date.parse(value) > Date.parse(otherDate);
        });
        jQuery.validator.unobtrusive.adapters.add("greater", ["other"], function (options) {
            options.rules["greater"] = options.params;          // assigned object becomes "params" in callback
            options.messages["greater"] = options.message;
        });
    </script>
</head>
<body>
    @RenderBody()
</body>
</html>
